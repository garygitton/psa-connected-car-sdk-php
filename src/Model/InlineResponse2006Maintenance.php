<?php
/**
 * InlineResponse2006Maintenance
 *
 * PHP version 5
 *
 * @category Class
 * @package  Psa\ConnectedCar
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Connected Car Development
 *
 * This is the first release of our connected car API. With this API you can access more than 89 signals in a car. This API is available on Peugeot, CitroÃ«n and DS cars.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: connectedcar@mpsa.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Psa\ConnectedCar\Model;

use \ArrayAccess;
use \Psa\ConnectedCar\ObjectSerializer;

/**
 * InlineResponse2006Maintenance Class Doc Comment
 *
 * @category Class
 * @package  Psa\ConnectedCar
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2006Maintenance implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_6_maintenance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'totMileage' => 'float',
        'totMileageLabel' => '\Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel',
        'indDayBeforeMaint' => 'string',
        'indDayBeforeMaintLabel' => '\Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel',
        'indMileageBeforeMaint' => 'string',
        'indMileageBeforeMaintLabel' => '\Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel',
        'dayBeforeMaint' => 'float',
        'dayBeforeMaintLabel' => '\Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel',
        'mileageBeforeMaint' => 'float',
        'mileageBeforeMaintLabel' => '\Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'totMileage' => null,
        'totMileageLabel' => null,
        'indDayBeforeMaint' => null,
        'indDayBeforeMaintLabel' => null,
        'indMileageBeforeMaint' => null,
        'indMileageBeforeMaintLabel' => null,
        'dayBeforeMaint' => null,
        'dayBeforeMaintLabel' => null,
        'mileageBeforeMaint' => null,
        'mileageBeforeMaintLabel' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'totMileage' => 'totMileage',
        'totMileageLabel' => 'totMileageLabel',
        'indDayBeforeMaint' => 'indDayBeforeMaint',
        'indDayBeforeMaintLabel' => 'indDayBeforeMaintLabel',
        'indMileageBeforeMaint' => 'indMileageBeforeMaint',
        'indMileageBeforeMaintLabel' => 'indMileageBeforeMaintLabel',
        'dayBeforeMaint' => 'dayBeforeMaint',
        'dayBeforeMaintLabel' => 'dayBeforeMaintLabel',
        'mileageBeforeMaint' => 'mileageBeforeMaint',
        'mileageBeforeMaintLabel' => 'mileageBeforeMaintLabel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'totMileage' => 'setTotMileage',
        'totMileageLabel' => 'setTotMileageLabel',
        'indDayBeforeMaint' => 'setIndDayBeforeMaint',
        'indDayBeforeMaintLabel' => 'setIndDayBeforeMaintLabel',
        'indMileageBeforeMaint' => 'setIndMileageBeforeMaint',
        'indMileageBeforeMaintLabel' => 'setIndMileageBeforeMaintLabel',
        'dayBeforeMaint' => 'setDayBeforeMaint',
        'dayBeforeMaintLabel' => 'setDayBeforeMaintLabel',
        'mileageBeforeMaint' => 'setMileageBeforeMaint',
        'mileageBeforeMaintLabel' => 'setMileageBeforeMaintLabel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'totMileage' => 'getTotMileage',
        'totMileageLabel' => 'getTotMileageLabel',
        'indDayBeforeMaint' => 'getIndDayBeforeMaint',
        'indDayBeforeMaintLabel' => 'getIndDayBeforeMaintLabel',
        'indMileageBeforeMaint' => 'getIndMileageBeforeMaint',
        'indMileageBeforeMaintLabel' => 'getIndMileageBeforeMaintLabel',
        'dayBeforeMaint' => 'getDayBeforeMaint',
        'dayBeforeMaintLabel' => 'getDayBeforeMaintLabel',
        'mileageBeforeMaint' => 'getMileageBeforeMaint',
        'mileageBeforeMaintLabel' => 'getMileageBeforeMaintLabel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['totMileage'] = isset($data['totMileage']) ? $data['totMileage'] : null;
        $this->container['totMileageLabel'] = isset($data['totMileageLabel']) ? $data['totMileageLabel'] : null;
        $this->container['indDayBeforeMaint'] = isset($data['indDayBeforeMaint']) ? $data['indDayBeforeMaint'] : null;
        $this->container['indDayBeforeMaintLabel'] = isset($data['indDayBeforeMaintLabel']) ? $data['indDayBeforeMaintLabel'] : null;
        $this->container['indMileageBeforeMaint'] = isset($data['indMileageBeforeMaint']) ? $data['indMileageBeforeMaint'] : null;
        $this->container['indMileageBeforeMaintLabel'] = isset($data['indMileageBeforeMaintLabel']) ? $data['indMileageBeforeMaintLabel'] : null;
        $this->container['dayBeforeMaint'] = isset($data['dayBeforeMaint']) ? $data['dayBeforeMaint'] : null;
        $this->container['dayBeforeMaintLabel'] = isset($data['dayBeforeMaintLabel']) ? $data['dayBeforeMaintLabel'] : null;
        $this->container['mileageBeforeMaint'] = isset($data['mileageBeforeMaint']) ? $data['mileageBeforeMaint'] : null;
        $this->container['mileageBeforeMaintLabel'] = isset($data['mileageBeforeMaintLabel']) ? $data['mileageBeforeMaintLabel'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets totMileage
     *
     * @return float
     */
    public function getTotMileage()
    {
        return $this->container['totMileage'];
    }

    /**
     * Sets totMileage
     *
     * @param float $totMileage totMileage
     *
     * @return $this
     */
    public function setTotMileage($totMileage)
    {
        $this->container['totMileage'] = $totMileage;

        return $this;
    }

    /**
     * Gets totMileageLabel
     *
     * @return \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel
     */
    public function getTotMileageLabel()
    {
        return $this->container['totMileageLabel'];
    }

    /**
     * Sets totMileageLabel
     *
     * @param \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel $totMileageLabel totMileageLabel
     *
     * @return $this
     */
    public function setTotMileageLabel($totMileageLabel)
    {
        $this->container['totMileageLabel'] = $totMileageLabel;

        return $this;
    }

    /**
     * Gets indDayBeforeMaint
     *
     * @return string
     */
    public function getIndDayBeforeMaint()
    {
        return $this->container['indDayBeforeMaint'];
    }

    /**
     * Sets indDayBeforeMaint
     *
     * @param string $indDayBeforeMaint indDayBeforeMaint
     *
     * @return $this
     */
    public function setIndDayBeforeMaint($indDayBeforeMaint)
    {
        $this->container['indDayBeforeMaint'] = $indDayBeforeMaint;

        return $this;
    }

    /**
     * Gets indDayBeforeMaintLabel
     *
     * @return \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel
     */
    public function getIndDayBeforeMaintLabel()
    {
        return $this->container['indDayBeforeMaintLabel'];
    }

    /**
     * Sets indDayBeforeMaintLabel
     *
     * @param \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel $indDayBeforeMaintLabel indDayBeforeMaintLabel
     *
     * @return $this
     */
    public function setIndDayBeforeMaintLabel($indDayBeforeMaintLabel)
    {
        $this->container['indDayBeforeMaintLabel'] = $indDayBeforeMaintLabel;

        return $this;
    }

    /**
     * Gets indMileageBeforeMaint
     *
     * @return string
     */
    public function getIndMileageBeforeMaint()
    {
        return $this->container['indMileageBeforeMaint'];
    }

    /**
     * Sets indMileageBeforeMaint
     *
     * @param string $indMileageBeforeMaint indMileageBeforeMaint
     *
     * @return $this
     */
    public function setIndMileageBeforeMaint($indMileageBeforeMaint)
    {
        $this->container['indMileageBeforeMaint'] = $indMileageBeforeMaint;

        return $this;
    }

    /**
     * Gets indMileageBeforeMaintLabel
     *
     * @return \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel
     */
    public function getIndMileageBeforeMaintLabel()
    {
        return $this->container['indMileageBeforeMaintLabel'];
    }

    /**
     * Sets indMileageBeforeMaintLabel
     *
     * @param \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel $indMileageBeforeMaintLabel indMileageBeforeMaintLabel
     *
     * @return $this
     */
    public function setIndMileageBeforeMaintLabel($indMileageBeforeMaintLabel)
    {
        $this->container['indMileageBeforeMaintLabel'] = $indMileageBeforeMaintLabel;

        return $this;
    }

    /**
     * Gets dayBeforeMaint
     *
     * @return float
     */
    public function getDayBeforeMaint()
    {
        return $this->container['dayBeforeMaint'];
    }

    /**
     * Sets dayBeforeMaint
     *
     * @param float $dayBeforeMaint dayBeforeMaint
     *
     * @return $this
     */
    public function setDayBeforeMaint($dayBeforeMaint)
    {
        $this->container['dayBeforeMaint'] = $dayBeforeMaint;

        return $this;
    }

    /**
     * Gets dayBeforeMaintLabel
     *
     * @return \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel
     */
    public function getDayBeforeMaintLabel()
    {
        return $this->container['dayBeforeMaintLabel'];
    }

    /**
     * Sets dayBeforeMaintLabel
     *
     * @param \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel $dayBeforeMaintLabel dayBeforeMaintLabel
     *
     * @return $this
     */
    public function setDayBeforeMaintLabel($dayBeforeMaintLabel)
    {
        $this->container['dayBeforeMaintLabel'] = $dayBeforeMaintLabel;

        return $this;
    }

    /**
     * Gets mileageBeforeMaint
     *
     * @return float
     */
    public function getMileageBeforeMaint()
    {
        return $this->container['mileageBeforeMaint'];
    }

    /**
     * Sets mileageBeforeMaint
     *
     * @param float $mileageBeforeMaint mileageBeforeMaint
     *
     * @return $this
     */
    public function setMileageBeforeMaint($mileageBeforeMaint)
    {
        $this->container['mileageBeforeMaint'] = $mileageBeforeMaint;

        return $this;
    }

    /**
     * Gets mileageBeforeMaintLabel
     *
     * @return \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel
     */
    public function getMileageBeforeMaintLabel()
    {
        return $this->container['mileageBeforeMaintLabel'];
    }

    /**
     * Sets mileageBeforeMaintLabel
     *
     * @param \Psa\ConnectedCar\Model\InlineResponse2006FuelFuelTankAlerteLabel $mileageBeforeMaintLabel mileageBeforeMaintLabel
     *
     * @return $this
     */
    public function setMileageBeforeMaintLabel($mileageBeforeMaintLabel)
    {
        $this->container['mileageBeforeMaintLabel'] = $mileageBeforeMaintLabel;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


