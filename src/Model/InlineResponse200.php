<?php
/**
 * InlineResponse200
 *
 * PHP version 5
 *
 * @category Class
 * @package  Psa\ConnectedCar
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Connected Car Development
 *
 * This is the first release of our connected car API. With this API you can access more than 89 signals in a car. This API is available on Peugeot, CitroÃ«n and DS cars.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: connectedcar@mpsa.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Psa\ConnectedCar\Model;

use \ArrayAccess;
use \Psa\ConnectedCar\ObjectSerializer;

/**
 * InlineResponse200 Class Doc Comment
 *
 * @category Class
 * @package  Psa\ConnectedCar
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse200 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'totMileage' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'flipVeh' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'highRearCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'avgRearCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'lowRearCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'repairRearCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'highFrontCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'avgFrontCrashInfoN1' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'avgFrontCrashInfoN2' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'lowFrontCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'repairFrontCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'pedestCrashInfo141' => 'float',
        'pedestCrashInfo160' => 'float',
        'pedestCrashInfo260' => 'float',
        'pedestCrashInfo360' => 'float',
        'highLatCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'avgLatCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'lowLatCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'repairLatCrashInfo' => '\Psa\ConnectedCar\Model\CrashlistTotMileage',
        'vin' => 'string',
        'lastUpdate' => 'string',
        'contract' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'totMileage' => null,
        'flipVeh' => null,
        'highRearCrashInfo' => null,
        'avgRearCrashInfo' => null,
        'lowRearCrashInfo' => null,
        'repairRearCrashInfo' => null,
        'highFrontCrashInfo' => null,
        'avgFrontCrashInfoN1' => null,
        'avgFrontCrashInfoN2' => null,
        'lowFrontCrashInfo' => null,
        'repairFrontCrashInfo' => null,
        'pedestCrashInfo141' => null,
        'pedestCrashInfo160' => null,
        'pedestCrashInfo260' => null,
        'pedestCrashInfo360' => null,
        'highLatCrashInfo' => null,
        'avgLatCrashInfo' => null,
        'lowLatCrashInfo' => null,
        'repairLatCrashInfo' => null,
        'vin' => null,
        'lastUpdate' => null,
        'contract' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'totMileage' => 'totMileage',
        'flipVeh' => 'flipVeh',
        'highRearCrashInfo' => 'highRearCrashInfo',
        'avgRearCrashInfo' => 'avgRearCrashInfo',
        'lowRearCrashInfo' => 'lowRearCrashInfo',
        'repairRearCrashInfo' => 'repairRearCrashInfo',
        'highFrontCrashInfo' => 'highFrontCrashInfo',
        'avgFrontCrashInfoN1' => 'avgFrontCrashInfoN1',
        'avgFrontCrashInfoN2' => 'avgFrontCrashInfoN2',
        'lowFrontCrashInfo' => 'lowFrontCrashInfo',
        'repairFrontCrashInfo' => 'repairFrontCrashInfo',
        'pedestCrashInfo141' => 'pedestCrashInfo1_41',
        'pedestCrashInfo160' => 'pedestCrashInfo1_60',
        'pedestCrashInfo260' => 'pedestCrashInfo2_60',
        'pedestCrashInfo360' => 'pedestCrashInfo3_60',
        'highLatCrashInfo' => 'highLatCrashInfo',
        'avgLatCrashInfo' => 'avgLatCrashInfo',
        'lowLatCrashInfo' => 'lowLatCrashInfo',
        'repairLatCrashInfo' => 'repairLatCrashInfo',
        'vin' => 'vin',
        'lastUpdate' => 'lastUpdate',
        'contract' => 'contract'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'totMileage' => 'setTotMileage',
        'flipVeh' => 'setFlipVeh',
        'highRearCrashInfo' => 'setHighRearCrashInfo',
        'avgRearCrashInfo' => 'setAvgRearCrashInfo',
        'lowRearCrashInfo' => 'setLowRearCrashInfo',
        'repairRearCrashInfo' => 'setRepairRearCrashInfo',
        'highFrontCrashInfo' => 'setHighFrontCrashInfo',
        'avgFrontCrashInfoN1' => 'setAvgFrontCrashInfoN1',
        'avgFrontCrashInfoN2' => 'setAvgFrontCrashInfoN2',
        'lowFrontCrashInfo' => 'setLowFrontCrashInfo',
        'repairFrontCrashInfo' => 'setRepairFrontCrashInfo',
        'pedestCrashInfo141' => 'setPedestCrashInfo141',
        'pedestCrashInfo160' => 'setPedestCrashInfo160',
        'pedestCrashInfo260' => 'setPedestCrashInfo260',
        'pedestCrashInfo360' => 'setPedestCrashInfo360',
        'highLatCrashInfo' => 'setHighLatCrashInfo',
        'avgLatCrashInfo' => 'setAvgLatCrashInfo',
        'lowLatCrashInfo' => 'setLowLatCrashInfo',
        'repairLatCrashInfo' => 'setRepairLatCrashInfo',
        'vin' => 'setVin',
        'lastUpdate' => 'setLastUpdate',
        'contract' => 'setContract'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'totMileage' => 'getTotMileage',
        'flipVeh' => 'getFlipVeh',
        'highRearCrashInfo' => 'getHighRearCrashInfo',
        'avgRearCrashInfo' => 'getAvgRearCrashInfo',
        'lowRearCrashInfo' => 'getLowRearCrashInfo',
        'repairRearCrashInfo' => 'getRepairRearCrashInfo',
        'highFrontCrashInfo' => 'getHighFrontCrashInfo',
        'avgFrontCrashInfoN1' => 'getAvgFrontCrashInfoN1',
        'avgFrontCrashInfoN2' => 'getAvgFrontCrashInfoN2',
        'lowFrontCrashInfo' => 'getLowFrontCrashInfo',
        'repairFrontCrashInfo' => 'getRepairFrontCrashInfo',
        'pedestCrashInfo141' => 'getPedestCrashInfo141',
        'pedestCrashInfo160' => 'getPedestCrashInfo160',
        'pedestCrashInfo260' => 'getPedestCrashInfo260',
        'pedestCrashInfo360' => 'getPedestCrashInfo360',
        'highLatCrashInfo' => 'getHighLatCrashInfo',
        'avgLatCrashInfo' => 'getAvgLatCrashInfo',
        'lowLatCrashInfo' => 'getLowLatCrashInfo',
        'repairLatCrashInfo' => 'getRepairLatCrashInfo',
        'vin' => 'getVin',
        'lastUpdate' => 'getLastUpdate',
        'contract' => 'getContract'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['totMileage'] = isset($data['totMileage']) ? $data['totMileage'] : null;
        $this->container['flipVeh'] = isset($data['flipVeh']) ? $data['flipVeh'] : null;
        $this->container['highRearCrashInfo'] = isset($data['highRearCrashInfo']) ? $data['highRearCrashInfo'] : null;
        $this->container['avgRearCrashInfo'] = isset($data['avgRearCrashInfo']) ? $data['avgRearCrashInfo'] : null;
        $this->container['lowRearCrashInfo'] = isset($data['lowRearCrashInfo']) ? $data['lowRearCrashInfo'] : null;
        $this->container['repairRearCrashInfo'] = isset($data['repairRearCrashInfo']) ? $data['repairRearCrashInfo'] : null;
        $this->container['highFrontCrashInfo'] = isset($data['highFrontCrashInfo']) ? $data['highFrontCrashInfo'] : null;
        $this->container['avgFrontCrashInfoN1'] = isset($data['avgFrontCrashInfoN1']) ? $data['avgFrontCrashInfoN1'] : null;
        $this->container['avgFrontCrashInfoN2'] = isset($data['avgFrontCrashInfoN2']) ? $data['avgFrontCrashInfoN2'] : null;
        $this->container['lowFrontCrashInfo'] = isset($data['lowFrontCrashInfo']) ? $data['lowFrontCrashInfo'] : null;
        $this->container['repairFrontCrashInfo'] = isset($data['repairFrontCrashInfo']) ? $data['repairFrontCrashInfo'] : null;
        $this->container['pedestCrashInfo141'] = isset($data['pedestCrashInfo141']) ? $data['pedestCrashInfo141'] : null;
        $this->container['pedestCrashInfo160'] = isset($data['pedestCrashInfo160']) ? $data['pedestCrashInfo160'] : null;
        $this->container['pedestCrashInfo260'] = isset($data['pedestCrashInfo260']) ? $data['pedestCrashInfo260'] : null;
        $this->container['pedestCrashInfo360'] = isset($data['pedestCrashInfo360']) ? $data['pedestCrashInfo360'] : null;
        $this->container['highLatCrashInfo'] = isset($data['highLatCrashInfo']) ? $data['highLatCrashInfo'] : null;
        $this->container['avgLatCrashInfo'] = isset($data['avgLatCrashInfo']) ? $data['avgLatCrashInfo'] : null;
        $this->container['lowLatCrashInfo'] = isset($data['lowLatCrashInfo']) ? $data['lowLatCrashInfo'] : null;
        $this->container['repairLatCrashInfo'] = isset($data['repairLatCrashInfo']) ? $data['repairLatCrashInfo'] : null;
        $this->container['vin'] = isset($data['vin']) ? $data['vin'] : null;
        $this->container['lastUpdate'] = isset($data['lastUpdate']) ? $data['lastUpdate'] : null;
        $this->container['contract'] = isset($data['contract']) ? $data['contract'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets totMileage
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getTotMileage()
    {
        return $this->container['totMileage'];
    }

    /**
     * Sets totMileage
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $totMileage totMileage
     *
     * @return $this
     */
    public function setTotMileage($totMileage)
    {
        $this->container['totMileage'] = $totMileage;

        return $this;
    }

    /**
     * Gets flipVeh
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getFlipVeh()
    {
        return $this->container['flipVeh'];
    }

    /**
     * Sets flipVeh
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $flipVeh flipVeh
     *
     * @return $this
     */
    public function setFlipVeh($flipVeh)
    {
        $this->container['flipVeh'] = $flipVeh;

        return $this;
    }

    /**
     * Gets highRearCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getHighRearCrashInfo()
    {
        return $this->container['highRearCrashInfo'];
    }

    /**
     * Sets highRearCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $highRearCrashInfo highRearCrashInfo
     *
     * @return $this
     */
    public function setHighRearCrashInfo($highRearCrashInfo)
    {
        $this->container['highRearCrashInfo'] = $highRearCrashInfo;

        return $this;
    }

    /**
     * Gets avgRearCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getAvgRearCrashInfo()
    {
        return $this->container['avgRearCrashInfo'];
    }

    /**
     * Sets avgRearCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $avgRearCrashInfo avgRearCrashInfo
     *
     * @return $this
     */
    public function setAvgRearCrashInfo($avgRearCrashInfo)
    {
        $this->container['avgRearCrashInfo'] = $avgRearCrashInfo;

        return $this;
    }

    /**
     * Gets lowRearCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getLowRearCrashInfo()
    {
        return $this->container['lowRearCrashInfo'];
    }

    /**
     * Sets lowRearCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $lowRearCrashInfo lowRearCrashInfo
     *
     * @return $this
     */
    public function setLowRearCrashInfo($lowRearCrashInfo)
    {
        $this->container['lowRearCrashInfo'] = $lowRearCrashInfo;

        return $this;
    }

    /**
     * Gets repairRearCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getRepairRearCrashInfo()
    {
        return $this->container['repairRearCrashInfo'];
    }

    /**
     * Sets repairRearCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $repairRearCrashInfo repairRearCrashInfo
     *
     * @return $this
     */
    public function setRepairRearCrashInfo($repairRearCrashInfo)
    {
        $this->container['repairRearCrashInfo'] = $repairRearCrashInfo;

        return $this;
    }

    /**
     * Gets highFrontCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getHighFrontCrashInfo()
    {
        return $this->container['highFrontCrashInfo'];
    }

    /**
     * Sets highFrontCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $highFrontCrashInfo highFrontCrashInfo
     *
     * @return $this
     */
    public function setHighFrontCrashInfo($highFrontCrashInfo)
    {
        $this->container['highFrontCrashInfo'] = $highFrontCrashInfo;

        return $this;
    }

    /**
     * Gets avgFrontCrashInfoN1
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getAvgFrontCrashInfoN1()
    {
        return $this->container['avgFrontCrashInfoN1'];
    }

    /**
     * Sets avgFrontCrashInfoN1
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $avgFrontCrashInfoN1 avgFrontCrashInfoN1
     *
     * @return $this
     */
    public function setAvgFrontCrashInfoN1($avgFrontCrashInfoN1)
    {
        $this->container['avgFrontCrashInfoN1'] = $avgFrontCrashInfoN1;

        return $this;
    }

    /**
     * Gets avgFrontCrashInfoN2
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getAvgFrontCrashInfoN2()
    {
        return $this->container['avgFrontCrashInfoN2'];
    }

    /**
     * Sets avgFrontCrashInfoN2
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $avgFrontCrashInfoN2 avgFrontCrashInfoN2
     *
     * @return $this
     */
    public function setAvgFrontCrashInfoN2($avgFrontCrashInfoN2)
    {
        $this->container['avgFrontCrashInfoN2'] = $avgFrontCrashInfoN2;

        return $this;
    }

    /**
     * Gets lowFrontCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getLowFrontCrashInfo()
    {
        return $this->container['lowFrontCrashInfo'];
    }

    /**
     * Sets lowFrontCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $lowFrontCrashInfo lowFrontCrashInfo
     *
     * @return $this
     */
    public function setLowFrontCrashInfo($lowFrontCrashInfo)
    {
        $this->container['lowFrontCrashInfo'] = $lowFrontCrashInfo;

        return $this;
    }

    /**
     * Gets repairFrontCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getRepairFrontCrashInfo()
    {
        return $this->container['repairFrontCrashInfo'];
    }

    /**
     * Sets repairFrontCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $repairFrontCrashInfo repairFrontCrashInfo
     *
     * @return $this
     */
    public function setRepairFrontCrashInfo($repairFrontCrashInfo)
    {
        $this->container['repairFrontCrashInfo'] = $repairFrontCrashInfo;

        return $this;
    }

    /**
     * Gets pedestCrashInfo141
     *
     * @return float
     */
    public function getPedestCrashInfo141()
    {
        return $this->container['pedestCrashInfo141'];
    }

    /**
     * Sets pedestCrashInfo141
     *
     * @param float $pedestCrashInfo141 pedestCrashInfo141
     *
     * @return $this
     */
    public function setPedestCrashInfo141($pedestCrashInfo141)
    {
        $this->container['pedestCrashInfo141'] = $pedestCrashInfo141;

        return $this;
    }

    /**
     * Gets pedestCrashInfo160
     *
     * @return float
     */
    public function getPedestCrashInfo160()
    {
        return $this->container['pedestCrashInfo160'];
    }

    /**
     * Sets pedestCrashInfo160
     *
     * @param float $pedestCrashInfo160 pedestCrashInfo160
     *
     * @return $this
     */
    public function setPedestCrashInfo160($pedestCrashInfo160)
    {
        $this->container['pedestCrashInfo160'] = $pedestCrashInfo160;

        return $this;
    }

    /**
     * Gets pedestCrashInfo260
     *
     * @return float
     */
    public function getPedestCrashInfo260()
    {
        return $this->container['pedestCrashInfo260'];
    }

    /**
     * Sets pedestCrashInfo260
     *
     * @param float $pedestCrashInfo260 pedestCrashInfo260
     *
     * @return $this
     */
    public function setPedestCrashInfo260($pedestCrashInfo260)
    {
        $this->container['pedestCrashInfo260'] = $pedestCrashInfo260;

        return $this;
    }

    /**
     * Gets pedestCrashInfo360
     *
     * @return float
     */
    public function getPedestCrashInfo360()
    {
        return $this->container['pedestCrashInfo360'];
    }

    /**
     * Sets pedestCrashInfo360
     *
     * @param float $pedestCrashInfo360 pedestCrashInfo360
     *
     * @return $this
     */
    public function setPedestCrashInfo360($pedestCrashInfo360)
    {
        $this->container['pedestCrashInfo360'] = $pedestCrashInfo360;

        return $this;
    }

    /**
     * Gets highLatCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getHighLatCrashInfo()
    {
        return $this->container['highLatCrashInfo'];
    }

    /**
     * Sets highLatCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $highLatCrashInfo highLatCrashInfo
     *
     * @return $this
     */
    public function setHighLatCrashInfo($highLatCrashInfo)
    {
        $this->container['highLatCrashInfo'] = $highLatCrashInfo;

        return $this;
    }

    /**
     * Gets avgLatCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getAvgLatCrashInfo()
    {
        return $this->container['avgLatCrashInfo'];
    }

    /**
     * Sets avgLatCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $avgLatCrashInfo avgLatCrashInfo
     *
     * @return $this
     */
    public function setAvgLatCrashInfo($avgLatCrashInfo)
    {
        $this->container['avgLatCrashInfo'] = $avgLatCrashInfo;

        return $this;
    }

    /**
     * Gets lowLatCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getLowLatCrashInfo()
    {
        return $this->container['lowLatCrashInfo'];
    }

    /**
     * Sets lowLatCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $lowLatCrashInfo lowLatCrashInfo
     *
     * @return $this
     */
    public function setLowLatCrashInfo($lowLatCrashInfo)
    {
        $this->container['lowLatCrashInfo'] = $lowLatCrashInfo;

        return $this;
    }

    /**
     * Gets repairLatCrashInfo
     *
     * @return \Psa\ConnectedCar\Model\CrashlistTotMileage
     */
    public function getRepairLatCrashInfo()
    {
        return $this->container['repairLatCrashInfo'];
    }

    /**
     * Sets repairLatCrashInfo
     *
     * @param \Psa\ConnectedCar\Model\CrashlistTotMileage $repairLatCrashInfo repairLatCrashInfo
     *
     * @return $this
     */
    public function setRepairLatCrashInfo($repairLatCrashInfo)
    {
        $this->container['repairLatCrashInfo'] = $repairLatCrashInfo;

        return $this;
    }

    /**
     * Gets vin
     *
     * @return string
     */
    public function getVin()
    {
        return $this->container['vin'];
    }

    /**
     * Sets vin
     *
     * @param string $vin vin
     *
     * @return $this
     */
    public function setVin($vin)
    {
        $this->container['vin'] = $vin;

        return $this;
    }

    /**
     * Gets lastUpdate
     *
     * @return string
     */
    public function getLastUpdate()
    {
        return $this->container['lastUpdate'];
    }

    /**
     * Sets lastUpdate
     *
     * @param string $lastUpdate lastUpdate
     *
     * @return $this
     */
    public function setLastUpdate($lastUpdate)
    {
        $this->container['lastUpdate'] = $lastUpdate;

        return $this;
    }

    /**
     * Gets contract
     *
     * @return string
     */
    public function getContract()
    {
        return $this->container['contract'];
    }

    /**
     * Sets contract
     *
     * @param string $contract contract
     *
     * @return $this
     */
    public function setContract($contract)
    {
        $this->container['contract'] = $contract;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


